[{"/home/rodrigo/github/duopettaja/src/index.tsx":"1","/home/rodrigo/github/duopettaja/src/serviceWorker.ts":"2","/home/rodrigo/github/duopettaja/src/App.tsx":"3","/home/rodrigo/github/duopettaja/src/redux/store/index.ts":"4","/home/rodrigo/github/duopettaja/src/views/Home.tsx":"5","/home/rodrigo/github/duopettaja/src/views/Lesson.tsx":"6","/home/rodrigo/github/duopettaja/src/views/FinishedLesson.tsx":"7","/home/rodrigo/github/duopettaja/src/views/Skill.tsx":"8","/home/rodrigo/github/duopettaja/src/utils/http.ts":"9","/home/rodrigo/github/duopettaja/src/models/Answer.ts":"10","/home/rodrigo/github/duopettaja/src/redux/reducers/index.ts":"11","/home/rodrigo/github/duopettaja/src/redux/actions/index.ts":"12","/home/rodrigo/github/duopettaja/src/components/CompoundQuestion/index.tsx":"13","/home/rodrigo/github/duopettaja/src/components/CompoundQuestion/styled.ts":"14","/home/rodrigo/github/duopettaja/src/redux/constants/index.ts":"15","/home/rodrigo/github/duopettaja/src/components/GuessQuestion/index.tsx":"16","/home/rodrigo/github/duopettaja/src/components/GuessQuestion/styled.ts":"17","/home/rodrigo/github/duopettaja/src/components/Header/index.tsx":"18","/home/rodrigo/github/duopettaja/src/components/Loading/index.tsx":"19","/home/rodrigo/github/duopettaja/src/components/LessonCard/index.tsx":"20","/home/rodrigo/github/duopettaja/src/components/ProgressBar/index.tsx":"21","/home/rodrigo/github/duopettaja/src/components/SkillCard/index.tsx":"22","/home/rodrigo/github/duopettaja/src/components/LessonCard/styled.ts":"23","/home/rodrigo/github/duopettaja/src/components/SkillCard/styled.ts":"24","/home/rodrigo/github/duopettaja/src/components/Header/styled.ts":"25","/home/rodrigo/github/duopettaja/src/components/Loading/styled.ts":"26"},{"size":862,"mtime":1610305847329,"results":"27","hashOfConfig":"28"},{"size":5201,"mtime":1610305847371,"results":"29","hashOfConfig":"28"},{"size":932,"mtime":1610305847298,"results":"30","hashOfConfig":"28"},{"size":130,"mtime":1610305847371,"results":"31","hashOfConfig":"28"},{"size":1308,"mtime":1610718305578,"results":"32","hashOfConfig":"28"},{"size":7437,"mtime":1610844162060,"results":"33","hashOfConfig":"28"},{"size":1245,"mtime":1610305847372,"results":"34","hashOfConfig":"28"},{"size":1904,"mtime":1610305847373,"results":"35","hashOfConfig":"28"},{"size":431,"mtime":1610305847372,"results":"36","hashOfConfig":"28"},{"size":325,"mtime":1610305847330,"results":"37","hashOfConfig":"28"},{"size":461,"mtime":1610305847340,"results":"38","hashOfConfig":"28"},{"size":175,"mtime":1610305847340,"results":"39","hashOfConfig":"28"},{"size":2408,"mtime":1610627473644,"results":"40","hashOfConfig":"28"},{"size":1217,"mtime":1610627401999,"results":"41","hashOfConfig":"28"},{"size":86,"mtime":1610305847340,"results":"42","hashOfConfig":"28"},{"size":1386,"mtime":1610630435171,"results":"43","hashOfConfig":"28"},{"size":859,"mtime":1610630198303,"results":"44","hashOfConfig":"28"},{"size":1292,"mtime":1610717972645,"results":"45","hashOfConfig":"28"},{"size":298,"mtime":1610718148065,"results":"46","hashOfConfig":"28"},{"size":832,"mtime":1610630574391,"results":"47","hashOfConfig":"28"},{"size":444,"mtime":1610630814787,"results":"48","hashOfConfig":"28"},{"size":659,"mtime":1610630932640,"results":"49","hashOfConfig":"28"},{"size":1123,"mtime":1610630527425,"results":"50","hashOfConfig":"28"},{"size":1285,"mtime":1610630865894,"results":"51","hashOfConfig":"28"},{"size":2440,"mtime":1610717884833,"results":"52","hashOfConfig":"28"},{"size":195,"mtime":1610718292514,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1buckzi",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/rodrigo/github/duopettaja/src/index.tsx",[],["113","114"],"/home/rodrigo/github/duopettaja/src/serviceWorker.ts",[],"/home/rodrigo/github/duopettaja/src/App.tsx",[],"/home/rodrigo/github/duopettaja/src/redux/store/index.ts",[],"/home/rodrigo/github/duopettaja/src/views/Home.tsx",["115"],"import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport SkillCard from \"../components/SkillCard\";\nimport Skill from \"../models/Skill\";\nimport \"../styles/Home.css\";\nimport http from \"../utils/http\";\n\ninterface IState {\n  skills: Skill[];\n  errorMessage: string;\n  loading: boolean;\n}\n\nconst Home = () => {\n  const [errorMessage, setErrorMessage] = React.useState(\"\")\n  const [loading, setLoading] = React.useState(true)\n  const [skills, setSkills] = React.useState([])\n\n  // constructor(props: {}) {\n  //   super(props);\n  //   this.state = {\n  //     errorMessage: \"\",\n  //     loading: true,\n  //     skills: [],\n  //   };\n  // }\n  React.useEffect(() => {\n    http\n      .get(`${process.env.REACT_APP_API}/skills`)\n      .then((response) => {\n        setSkills(response.data)\n        setLoading(false)\n      })\n      .catch((error) => {\n        setErrorMessage(`An error occured: ${error}. Refresh the page.`)\n        setLoading(false)\n      });\n  }, [])\n\n  const content: JSX.Element = loading\n  ? <Loading />\n  : <div className=\"row\">\n      <h4>{errorMessage}</h4>\n      <div className=\"skills\">\n        { skills.map((skill: Skill) => <SkillCard {...skill} key={skill.id} />) }\n      </div>\n    </div>;\n  return content;\n}\n\n(Home as any).whyDidYouRender = true\n\nexport default Home\n","/home/rodrigo/github/duopettaja/src/views/Lesson.tsx",["116"],"/home/rodrigo/github/duopettaja/src/views/FinishedLesson.tsx",[],"/home/rodrigo/github/duopettaja/src/views/Skill.tsx",[],"/home/rodrigo/github/duopettaja/src/utils/http.ts",["117"],"import axios, { AxiosRequestConfig } from \"axios\";\n\nconst header = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Content-Type\": \"application/json\",\n} as AxiosRequestConfig;\n\nexport const get = (url: string) => axios.get(url, header);\nexport const post = (url: string, data: any) => axios.post(url, data, header);\nexport const put = (url: string, data: any) => axios.post(url, data, header);\n\nexport default {\n  get,\n  post,\n  put,\n};\n","/home/rodrigo/github/duopettaja/src/models/Answer.ts",[],"/home/rodrigo/github/duopettaja/src/redux/reducers/index.ts",[],"/home/rodrigo/github/duopettaja/src/redux/actions/index.ts",["118"],"import { REACH_GOAL } from \"../constants\";\n\nexport const reachGoal = () => {\n  const action = {\n    type: REACH_GOAL,\n  };\n  return action;\n};\n\nexport default {\n  reachGoal\n}\n","/home/rodrigo/github/duopettaja/src/components/CompoundQuestion/index.tsx",["119"],"import React from \"react\";\nimport Word from \"../../models/Word\";\nimport * as S from \"./styled\";\n\ninterface IProps {\n  question: string;\n  options: Word[];\n  onChange: Function;\n}\n\ninterface IState {\n  question: string;\n  selectedWords: Word[];\n  availableWords: Word[];\n}\n\nconst byIdAscending: (a: Word, b: Word) => number = (a: Word, b: Word) => a.id - b.id;\n\nconst CompoundQuestion = ({question, options, onChange}: IProps) => {\n  const [availableWords, setAvailableWords] = React.useState<Word[]>([...options]);\n  const [selectedWords, setSelectedWords] = React.useState<Word[]>([]);\n\n  const selectWord = (option: Word): void => {\n    if (option.selected) {\n      return;\n    }\n    option.selected = true;\n    const chosenWords: Word[] = [...selectedWords, option];\n    const availableWords: Word[] = [\n      option,\n      ...options.filter((el: Word) => el.id !== option.id),\n    ].sort(byIdAscending);\n    setAvailableWords(availableWords);\n    setSelectedWords(chosenWords);\n    getAnswer(chosenWords);\n  }\n\n  const deselectWord = (option: Word): void => {\n    option.selected = false;\n    const chosenWords: Word[] = selectedWords.filter((el: Word) => el.id !== option.id);\n    const availableWords: Word[] = [\n      option,\n      ...options.filter((el: Word) => el.id !== option.id)]\n    .sort(byIdAscending);\n    setAvailableWords(availableWords);\n    setSelectedWords(chosenWords);\n  }\n\n  const getAnswer = (selectedWords: Word[]): void => {\n    onChange(selectedWords);\n  }\n\n  return (\n    <div>\n      <S.QuestionRow>\n        <h2>{question}</h2>\n      </S.QuestionRow>\n      <div className=\"row\">\n        <S.SelectedWordsContainer>\n          <S.SelectedWordsBox>\n            {selectedWords.map((option: Word) =>\n              <S.WordBox key={option.id} selected={false} onClick={() => deselectWord(option)}>\n                {option.text}\n              </S.WordBox>,\n            )}\n          </S.SelectedWordsBox>\n        </S.SelectedWordsContainer>\n      </div>\n      <div className=\"row\">\n        <S.AvailableWordsContainer>\n          {availableWords.map((option: Word) =>\n            <S.WordBox key={option.id} selected={option.selected} onClick={() => selectWord(option)}>\n              {option.text}\n            </S.WordBox>,\n          )}\n        </S.AvailableWordsContainer>\n      </div>\n    </div>\n  );\n}\n\n(CompoundQuestion as any).whyDidYouRender = true;\n\nexport default CompoundQuestion;\n","/home/rodrigo/github/duopettaja/src/components/CompoundQuestion/styled.ts",[],"/home/rodrigo/github/duopettaja/src/redux/constants/index.ts",[],"/home/rodrigo/github/duopettaja/src/components/GuessQuestion/index.tsx",["120","121"],"import React from \"react\";\nimport styled, { StyledComponent } from \"styled-components\";\nimport Word from \"../../models/Word\";\nimport * as S from './styled';\n\ninterface IProps {\n  options: Word[];\n  question: string;\n  onChange: Function;\n}\n\nconst GuessQuestion = ({question, options, onChange}: IProps) => {\n  const [localQuestion,] = React.useState(question);\n  const [localOptions, setLocalOptions] = React.useState([...options]);\n\n  const getAnswer = (option: Word) => {\n    cleanSelectedAnswers();\n    const newOptions = [\n      ...localOptions.filter((o) => o.id !== option.id),\n      option\n    ].sort((a, b) => a.id - b.id);\n    setLocalOptions(newOptions);\n    option.selected = true;\n    onChange(option);\n  }\n\n  const cleanSelectedAnswers = () => {\n    options.forEach((option: Word) => {\n      option.selected = false;\n    });\n  }\n\n  return (\n    <div>\n      <S.LocalQuestionRow>\n        <h2>{localQuestion}</h2>\n      </S.LocalQuestionRow>\n      <S.QuestionsContainer>\n        {localOptions.map((option: any) =>\n        <S.QuestionContainer key={option.id}>\n          <S.QuestionOption selected={option.selected} onClick={() => getAnswer(option)}>\n            {option.text}\n          </S.QuestionOption>\n        </S.QuestionContainer>,\n        )}\n      </S.QuestionsContainer>\n    </div>\n  );\n}\n\n(GuessQuestion as any).whyDidYouRender = true;\n\nexport default GuessQuestion;\n","/home/rodrigo/github/duopettaja/src/components/GuessQuestion/styled.ts",[],"/home/rodrigo/github/duopettaja/src/components/Header/index.tsx",[],"/home/rodrigo/github/duopettaja/src/components/Loading/index.tsx",["122"],"/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport * as S from \"./styled\";\n/* eslint-enable no-unused-vars */\n\nexport default () => {\n  return (\n    <S.Loading>\n      <i className=\"fa fa-spinner fa-spin\" style={{fontSize: \"100px\", color: \"#20a8e9\"}}></i>\n    </S.Loading>\n  );\n}\n","/home/rodrigo/github/duopettaja/src/components/LessonCard/index.tsx",[],"/home/rodrigo/github/duopettaja/src/components/ProgressBar/index.tsx",[],"/home/rodrigo/github/duopettaja/src/components/SkillCard/index.tsx",[],"/home/rodrigo/github/duopettaja/src/components/LessonCard/styled.ts",[],"/home/rodrigo/github/duopettaja/src/components/SkillCard/styled.ts",[],"/home/rodrigo/github/duopettaja/src/components/Header/styled.ts",[],"/home/rodrigo/github/duopettaja/src/components/Loading/styled.ts",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":8,"column":11,"nodeType":"129","messageId":"130","endLine":8,"endColumn":17},{"ruleId":"127","severity":1,"message":"131","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":12,"column":1,"nodeType":"134","endLine":16,"endColumn":3},{"ruleId":"132","severity":1,"message":"133","line":10,"column":1,"nodeType":"134","endLine":12,"endColumn":2},{"ruleId":"127","severity":1,"message":"128","line":11,"column":11,"nodeType":"129","messageId":"130","endLine":11,"endColumn":17},{"ruleId":"127","severity":1,"message":"135","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"136","line":2,"column":18,"nodeType":"129","messageId":"130","endLine":2,"endColumn":33},{"ruleId":"132","severity":1,"message":"137","line":6,"column":1,"nodeType":"134","endLine":12,"endColumn":2},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'IState' is defined but never used.","Identifier","unusedVar","'isIdentifier' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'styled' is defined but never used.","'StyledComponent' is defined but never used.","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]